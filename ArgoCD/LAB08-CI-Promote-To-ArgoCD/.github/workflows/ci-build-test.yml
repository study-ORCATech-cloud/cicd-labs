name: CI - Build and Test

on:
  push:
    branches: [ main, develop ]
    paths: [ 'app/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'app/**' ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/cicd-demo

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        cd app
        pip install -r requirements.txt
        pip install -r tests/test_requirements.txt

    - name: Run unit tests
      run: |
        cd app
        python -m pytest tests/ -v --tb=short

    - name: Test application startup
      run: |
        cd app
        python main.py &
        sleep 5
        curl -f http://localhost:5000/health
        pkill -f python

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      version: ${{ steps.version.outputs.version }}
      image-tag: ${{ steps.version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate version
      id: version
      run: |
        # Generate version based on timestamp and short commit hash
        VERSION="v$(date +'%Y%m%d')-${GITHUB_SHA::7}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_HUB_USERNAME }}
        password: ${{ env.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./app
        file: ./app/Dockerfile
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          ${{ env.IMAGE_NAME }}:latest
        build-args: |
          BUILD_DATE=${{ github.event.head_commit.timestamp }}
          GIT_COMMIT=${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run security scan
      uses: docker/scout-action@v1
      with:
        command: cves
        image: ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
        only-severities: critical,high
      continue-on-error: true 